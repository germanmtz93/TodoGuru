name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install coverage
    
    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover tests
        coverage xml -o coverage.xml
    
    - name: Validate SonarQube Configuration
      run: |
        if [ -z "${{ secrets.SONAR_TOKEN }}" ]; then
          echo "❌ SONAR_TOKEN secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.SONAR_HOST_URL }}" ]; then
          echo "❌ SONAR_HOST_URL secret is not set"
          exit 1
        fi
        echo "✅ SonarQube configuration validated"
        echo "Host URL: ${{ secrets.SONAR_HOST_URL }}"
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.sources=todo_cli
          -Dsonar.tests=tests
          -Dsonar.python.version=3.11
          -Dsonar.projectKey=germanmtz93_TodoGuru
          -Dsonar.projectName=TodoGuru
          -Dsonar.projectVersion=1.0.0
          -Dsonar.qualitygate.wait=true
          -Dsonar.qualitygate.timeout=300
          -Dsonar.scm.provider=git
          -Dsonar.scm.revision=${{ github.sha }}
        
    - name: SonarQube Quality Gate check
      uses: SonarSource/sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        scanMetadataReportFile: .scannerwork/report-task.txt
